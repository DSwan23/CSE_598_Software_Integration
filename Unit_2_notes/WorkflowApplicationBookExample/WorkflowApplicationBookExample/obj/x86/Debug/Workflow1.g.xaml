<?xml version="1.0" encoding="utf-8"?>
<local:Workflow1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:WorkflowApplicationBookExample;assembly=WorkflowApplicationBookExample" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WorkflowApplicationBookExample</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:Workflow1.Implementation>
    <Sequence>
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="nameFromCodeActivity" />
      </Sequence.Variables>
      <local:CodeActivityGetName defaultName="John/Jane Doe">
        <local:CodeActivityGetName.enteredName>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">nameFromCodeActivity</mca:CSharpReference>
          </OutArgument>
        </local:CodeActivityGetName.enteredName>
      </local:CodeActivityGetName>
      <WriteLine>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">nameFromCodeActivity + "Today's date is " + DateTime.Now</mca:CSharpValue>
        </InArgument>
      </WriteLine>
      <If>
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">DateTime.Now.Month &gt;= 1 &amp;&amp; DateTime.Now.Month &lt;= 5</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Sequence>
            <WriteLine Text="In the Spring Semester." />
            <Flowchart>
              <Flowchart.StartNode>
                <FlowStep x:Name="__ReferenceID0">
                  <WriteLine>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">"We are in Month " + DateTime.Now.Month</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID1">
                      <Switch x:TypeArguments="x:Int32">
                        <Switch.Expression>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">DateTime.Now.Month</mca:CSharpValue>
                          </InArgument>
                        </Switch.Expression>
                        <WriteLine x:Key="1" Text="Happy new year, remember to attend your classes!" />
                        <WriteLine x:Key="2" Text="Time to start studying for midterms!" />
                        <WriteLine x:Key="3" Text="Prepare for midterms!" />
                        <WriteLine x:Key="4" Text="Time to start studying for time" />
                        <WriteLine x:Key="5" Text="Time for finals!" />
                        <WriteLine x:Key="6" Text="Summer classes have begun!" />
                        <WriteLine x:Key="7" Text="Time to take your finals!" />
                        <WriteLine x:Key="8" Text="Remmber to attend your first classes" />
                        <WriteLine x:Key="9" Text="Enjoy your studies and start studying for midterms!" />
                        <WriteLine x:Key="10" Text="Remember to study and take your midterms" />
                        <WriteLine x:Key="11" Text="Complete your projects and start studying for finals!" />
                        <WriteLine x:Key="12" Text="Finals are here!" />
                      </Switch>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </Flowchart.StartNode>
              <x:Reference>__ReferenceID0</x:Reference>
              <x:Reference>__ReferenceID1</x:Reference>
            </Flowchart>
          </Sequence>
        </If.Then>
        <If.Else>
          <If>
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">DateTime.Now.Month &gt;= 6 &amp;&amp; DateTime.Now.Month &lt;= 7</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <WriteLine Text="In Summer Session" />
            </If.Then>
            <If.Else>
              <WriteLine Text="In Fall Semester" />
            </If.Else>
          </If>
        </If.Else>
      </If>
      <sads:DebugSymbol.Symbol>9xTRKP0nDArWva25M1mko1on1YOs05gBQzpcVXNlcnNcbWFkbWFcRG9jdW1lbnRzXEdpdFJlcG9zXENTRV81OThfU29mdHdhcmVfSW50ZWdyYXRpb25cVW5pdF8yX25vdGVzXFdvcmtmbG93QXBwbGljYXRpb25Cb29rRXhhbXBsZVxXb3JrZmxvd0FwcGxpY2F0aW9uQm9va0V4YW1wbGVcV29ya2Zsb3cxLnhhbWwuJwN3DgIBASsFMSECATEyBTYRAgEuNwV1CgIBAi4LLmUCATMrZCtzAgEyNAk0fwIBLzoLOooBAgEDPglkFAIBDGcJcw4CAQU/Cz9lAgEsQAtjFwIBDWoPao4BAgEGbg1uYQIBCnENcWACAQg/ST9iAgEtQxFHHQIBKUoVXB4CAQ5uS25eAgELcUtxXQIBCUUVRXoCASpNG01qAgEPUBdQlAECASdRF1GIAQIBJVIXUnkCASNTF1ODAQIBIVQXVHUCAR9VF1V/AgEdVhdWfgIBG1cXV4kBAgEZWBdYmAECARdZF1mOAQIBFVoXWpsBAgETWxdbdgIBEVBfUJEBAgEoUV9RhQECASZSX1J2AgEkU19TgAECASJUYFRyAgEgVWBVfAIBHlZgVnsCARxXYFeGAQIBGlhgWJUBAgEYWWFZiwECARZaYVqYAQIBFFthW3MCARI=</sads:DebugSymbol.Symbol>
    </Sequence>
  </local:Workflow1.Implementation>
</local:Workflow1>